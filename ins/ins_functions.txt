DataTypes::InsState ImportFromTec(std::string name, const MultiblockGrid& grid)
{
    DataTypes::InsState state;
    std::ifstream infile(name + ".tec");
    std::string line, token;
    int size = grid.GetTotalSize();
    std::valarray<double> u(size), v(size), p(size);
    std::vector<std::pair<int,int>> shapes = grid.GetShapes();
    int idx = 0;

    // skip first three lines
    std::getline(infile,line);
    std::getline(infile,line);
    std::getline(infile,line);
    while (infile)
    {
       std::getline(infile,line);
       std::istringstream input2(line);
       std::valarray<double> foo(6);
       int foo_idx = 0;
       bool skip_line = false;
       while(std::getline(input2, token,' '))
       {
           if (token[0] == 'Z') // skip theses lines
           {
               skip_line = true;
               break;
           }

           foo[foo_idx] = std::stod(token);
           foo_idx++;
       }
       if(skip_line == false)
       {
          u[idx] = foo[2];
          v[idx] = foo[3];
          p[idx] = foo[4];
          idx++;
       }
    }
    DataTypes::InsState in_state;
    in_state.u = Gridfunction(u, shapes);
    in_state.v = Gridfunction(v, shapes);
    in_state.p = Gridfunction(p, shapes);
    return in_state;
};
